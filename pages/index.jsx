import Head from 'next/head'
import React, { useState } from 'react';

export default function Home({ products, categories }) {

  const [menuOpen, setMenuOpen] = useState(false);

  function isMenuOpen(e) {
    const headerMenu = document.querySelector('#main-header .header-menu')
    
    headerMenu.classList.contains('open') ? headerMenu.classList.remove('open') : headerMenu.classList.add('open');
  }

  return (
    <>
      <Head>
        <title>Super Awesome Mega Store</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <header id="main-header">
        <a href="/" id="logo" >
          <img src="https://iconfitness-res.cloudinary.com/image/upload/f_auto,q_auto/v1596821061/nordictrack.com/cdn/images/catalog/modules/iFit-Coach-Personalized-Training-NordicTrack-v2.svg" alt="Store Logo" />
        </a>

        <nav>
          <button className='header-hamburger' onClick={isMenuOpen} ><span className='hamburger-line'>&nbsp;</span></button>
          <ul className='header-menu'>
            <li className='menu-close'>
              <button onClick={isMenuOpen}>X</button>
            </li>
            {categories.length && categories.map((category, index) => (
              <li key={index}>
                <a href={`/category/${category.id}`}>{category.name}</a>
              </li>
            ))}
          </ul>
        </nav>
      </header>

      <main id="main">
        
        <section>
          <h1>Super Awesome Mega Store</h1>
        </section>

        <section>
          <h2>Products</h2>

          <div className='products-container'>
          { products.length && products.map( (product, index) => (
            <a href={`/products/${product.id}`} key={index} className='product-card'>
              <h3>{product.name}</h3>
              <picture>
                <img src={product.image_url} alt='' />
              </picture>
              <div className='price-container'>
                <div className='price-wrapper'>
                  {product?.sales_price != 0 && (
                    <>
                      <p className='sale-price'>${product.sales_price}</p>
                      <br />
                    </>
                  )}
                  <p className='original-price'>${product.msrp}</p>
                </div>
              </div>
            </a>
          ) ) }
            {/* <pre>
            { JSON.stringify( products, null, 2) }
            </pre> */}
          </div>
        </section>

      </main>

      <footer id="main-footer">
        <p>&copy; Copyright 2023 iFIT.com</p>
        <div className='footer-links'>
          <ul className='footer-menu'>
            {categories.length && categories.map((category, index) => (
              <li key={index}>
                <a href={`/category/${category.id}`}>{category.name}</a>
              </li>
            ))}
          </ul>
        </div>
      </footer>
    </>
  )
}

export async function getStaticProps() {

  const resP = await fetch( process.env.NEXT_PUBLIC_SUPABASE_URL + '/rest/v1/products', {
    method: 'GET',
    headers: {
      apikey: process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY
    }
  });

  const resC = await fetch( process.env.NEXT_PUBLIC_SUPABASE_URL + '/rest/v1/categorys', {
    method: 'GET',
    headers: {
      apikey: process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY
    }
  });

  const products = await resP.json();
  const categories = await resC.json();

  return {
    props: {
      products: products,
      categories: categories
    }
  }
}